---
- name: initialize the local Vagrant directory
  file:
    path: '{{ origin_ci_vagrant_home_dir }}'
    state: directory

- name: add the packaged Vagrantfile to the local Vagrant directory
  copy:
    src: 'Vagrantfile'
    dest: '{{ origin_ci_vagrant_home_dir }}/Vagrantfile'

- name: add the Vagrant dynamic inventory
  copy:
    src: 'vagrant.py'
    dest: '{{ origin_ci_inventory_dir }}/vagrant.py'
    mode: 'a+rx'

- name: determine if we already have a VM running
  command: '/usr/bin/vagrant status {{ origin_ci_vagrant_hostname }}'
  args:
    chdir: '{{ origin_ci_vagrant_home_dir }}'
  ignore_errors: yes
  register: origin_ci_vagrant_status

- name: provision the VM with Vagrant
  command: "/usr/bin/vagrant up --provider={{ origin_ci_vagrant_provider }}"
  args:
    chdir: '{{ origin_ci_vagrant_home_dir }}'
  environment:
    OPENSHIFT_VAGRANT_BOX_NAME: '{{ origin_ci_vagrant_hostname }}'
    OPENSHIFT_VAGRANT_CPUS: '{{ origin_ci_vagrant_cpus }}'
    OPENSHIFT_VAGRANT_MEMORY: '{{ origin_ci_vagrant_memory }}'
    OPENSHIFT_VAGRANT_OPERATING_SYSTEM: '{{ origin_ci_vagrant_os }}'
    OPENSHIFT_VAGRANT_STAGE: '{{ origin_ci_vagrant_stage }}'
    OPENSHIFT_VAGRANT_MASTER_IP: '{{ origin_ci_vagrant_ip }}'
  when: "'running' not in origin_ci_vagrant_status.stdout"

- name: gather Vagrant SSH configuration for the host
  command: "/usr/bin/vagrant ssh-config --host={{ origin_ci_vagrant_hostname }}"
  args:
    chdir: '{{ origin_ci_vagrant_home_dir }}'
  register: origin_ci_vagrant_ssh_config

- name: determine where updated SSH configuration should go
  set_fact:
    origin_ci_ssh_config_file: '{{ origin_ci_inventory_dir }}/.ssh_config'
  when: origin_ci_ssh_config_strategy == 'discrete'

- name: determine where updated SSH configuration should go
  set_fact:
    origin_ci_ssh_config_file: '{{ ansible_env.HOME }}/.ssh/config'
  when: origin_ci_ssh_config_strategy == 'update'

- name: ensure the targeted SSH configuration file exists
  file:
    path: '{{ origin_ci_ssh_config_file }}'
    state: touch

- name: update the SSH configuration
  blockinfile:
    dest: '{{ origin_ci_ssh_config_file }}'
    block: '{{ origin_ci_vagrant_ssh_config.stdout }}'
    state: present
    marker: '# {mark} ANSIBLE MANAGED BLOCK FOR HOST {{ origin_ci_vagrant_hostname }}'
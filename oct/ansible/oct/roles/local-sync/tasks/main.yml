---
- name: ensure that we are given a source or we can determine one
  fail:
    msg: 'The repository location could not be determined as $GOPATH was unset.'
  when: origin_ci_sync_source is not defined and ansible_env.GOPATH is not defined

- name: determine the directory to sync if no override is provided
  set_fact:
    origin_ci_sync_source: "{{ ansible_env.GOPATH }}/src/github.com/openshift/{{ origin_ci_sync_repository }}"
  when: origin_ci_sync_source is not defined

- name: attempt to commit staged changes
  command: '/usr/bin/git commit --message="<AUTOMATED COMMIT OF STAGED CHANGES>"'
  args:
    chdir: '{{ origin_ci_sync_source }}'
  register: origin_ci_sync_staged_commit
  failed_when: no

- name: attempt to commit unstaged changes
  command: '/usr/bin/git commit --all --message="<AUTOMATED COMMIT OF UNSTAGED CHANGES>"'
  args:
    chdir: '{{ origin_ci_sync_source }}'
  register: origin_ci_sync_unstaged_commit
  failed_when: no

- name: push local changes to the remotes
  command: >
    /usr/bin/git push ssh://{{ item }}{{ hostvars[item]['origin_ci_sync_destination'] }} \
                      {{ origin_ci_sync_version }}:{{ origin_ci_sync_version }}          \
                      --force --tags --prune
  args:
    chdir: '{{ origin_ci_sync_source }}'
  with_items: '{{ groups[origin_ci_hosts] }}' # TODO: this is fragile if literal hosts are passed in. do we care?

- name: reset commit of unstaged changes if one was made
  command: '/usr/bin/git reset --mixed HEAD^1'
  args:
    chdir: '{{ origin_ci_sync_source }}'
  when: origin_ci_sync_unstaged_commit | succeeded

- name: reset commit of staged changes if one was made
  command: '/usr/bin/git reset --soft HEAD^1'
  args:
    chdir: '{{ origin_ci_sync_source }}'
  when: origin_ci_sync_staged_commit | succeeded
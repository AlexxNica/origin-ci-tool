---
- name: ensure directories exist to house the repositories we need
  file:
    path: '{{ origin_ci_gopath }}/{{ item }}'
    state: directory
    owner: '{{ origin_ci_user }}'
  with_items:
    - src/github.com/openshift
    - pkg
    - bin

- name: register the list of repositories we are concerned with
  set_fact:
    origin_ci_repositories: [
      'origin',
      'origin-web-console',
      'source-to-image',
      'origin-metrics',
      'origin-aggregated-logging'
    ]

- name: clone the source repositories
  git:
    repo: 'https://github.com/openshift/{{ item }}.git'
    clone: yes
    dest: '{{ origin_ci_gopath }}/src/github.com/openshift/{{ item }}'
    accept_hostkey: yes
  with_items: '{{ origin_ci_repositories }}'

- name: ensure all repositories allow pushes to happen to the current branch
  command: '/usr/bin/git config --add receive.denyCurrentBranch ignore'
  args:
    chdir: '{{ origin_ci_gopath }}/src/github.com/openshift/{{ item }}'
  with_items: '{{ origin_ci_repositories }}'

- name: ensure all repositories allow pushes to happen from the correct group
  command: '/usr/bin/git config --add core.sharedRepository group'
  args:
    chdir: '{{ origin_ci_gopath }}/src/github.com/openshift/{{ item }}'
  with_items: '{{ origin_ci_repositories }}'

- name: allow unsafe fast-forward pushes to the repository
  command: '/usr/bin/git config --add receive.denyNonFastForwards false'
  args:
    chdir: '{{ origin_ci_gopath }}/src/github.com/openshift/{{ item }}'
  with_items: '{{ origin_ci_repositories }}'

- name: ensure the repository management group exists
  group:
    name: '{{ origin_ci_user }}-git'
    state: present

- name: ensure that the correct user owns the repositories
  file:
    path: '{{ origin_ci_gopath }}'
    state: directory
    recurse: yes
    owner: '{{ origin_ci_user }}'
    group: '{{ origin_ci_user }}-git'
    mode: 'g+rwXs'

- name: ensure all necessary users have group-level privileges for the repos
  user:
    name: '{{ item }}'
    groups: '{{ origin_ci_user }}-git'
    append: yes
  with_items:
    - '{{ origin_ci_user }}'
    - '{{ ansible_user_id }}'
    - '{{ ansible_env.SUDO_USER }}'


- name: persist the GOPATH
  lineinfile:
    dest: /etc/environment
    regexp: '^GOPATH='
    line: 'GOPATH={{ origin_ci_gopath }}'
    state: present
    create: true
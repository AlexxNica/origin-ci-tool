---
- name: clean out the package manager cache
  command: '{{ ansible_pkg_mgr }} clean all'

- name: install distribution-independent dependencies
  package:
    name: '{{ item }}'
    state: latest
  with_items:
   - augeas
   - bridge-utils
   - bzip2
   - bzr
   - bind
   - btrfs-progs-devel
   - bind-utils
   - ctags
   - deltarpm
   - device-mapper-devel
   - ethtool
   - e2fsprogs
   - firefox
   - fontconfig
   - git
   - gcc
   - gcc-c++
   - glibc-static
   - gnuplot
   - google-chrome-stable
   - httpie
   - hg
   - iscsi-initiator-utils
   - jq
   - java-1.?.0-openjdk
   - kernel-devel
   - libselinux-devel
   - libnetfilter_queue-devel
   - make
   - mlocate
   - npm
   - ntp
   - openldap-clients
   - openvswitch
   - rubygems
   - screen
   - socat
   - sqlite-devel
   - sysstat
   - tig
   - tmux
   - unzip
   - vim
   - wget
   - xfsprogs
   - Xvfb
   - yum-utils

- name: install distribution-dependent dependencies
  package:
    name: '{{ item.package }}'
    state: latest
  when: ansible_distribution in item.distros
  with_items:
    - package: facter
      distros: [
        'CentOS',
        'Red Hat Enterprise Linux'
      ]

- name: install ChromeDriver to enable headless UI testing
  unarchive:
    src: https://chromedriver.storage.googleapis.com/2.16/chromedriver_linux64.zip
    copy: no # TODO: change to `remote_src: yes` once https://github.com/ansible/ansible-modules-core/issues/4752 is fixed
    dest: /usr/bin
    mode: u=rwx,g=rx,o=rx
    owner: root
    creates: /usr/bin/chromedriver

# we need the --exclude functionality from yum so we
# cannot use the agnostic package module from Ansible
- name: install yum if the host does not have it
  package:
    name: yum
    state: present
  when: ansible_pkg_mgr != 'yum'

- name: update all non-kernel packages to latest state
  yum:
    name: '*'
    exclude: 'kernel*'
    state: latest

- name: update npm to v3.7.3
  command: '/usr/bin/npm install npm@3.7.3 --global'

- name: document all the installed packages for the build logs
  command: '{{ ansible_pkg_mgr }} list installed'
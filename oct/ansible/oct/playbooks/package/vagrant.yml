---
- name: ensure we have the parameters necessary to package the VM image
  hosts: 'localhost'
  connection: 'local'
  become: no
  gather_facts: no

  pre_tasks:
    - name: ensure all required variables are set
      fail:
        msg: 'This playbook requires {{ item }} to be set.'
      when: item not in vars and item not in hostvars[inventory_hostname]
      with_items:
        - origin_ci_vagrant_target_stage
        - origin_ci_vagrant_hostname
        - origin_ci_vagrant_package_dir
        - origin_ci_vagrant_package_ref
        - origin_ci_vagrant_package_bump_version

- name: package the VM image
  hosts: 'localhost'
  connection: 'local'
  become: no
  gather_facts: no

  pre_tasks:
    - name: percolate variables from the target host
      set_fact:
        '{{ item }}': '{{ hostvars[origin_ci_vagrant_hostname][item] }}'
      with_items:
        - origin_ci_vagrant_home_dir
        - origin_ci_vagrant_hostname
        - origin_ci_vagrant_os
        - origin_ci_vagrant_provider

  tasks:
    - name: pause the VM so we can package it
      command: '/usr/bin/vagrant halt --force'
      args:
        chdir: '{{ origin_ci_vagrant_home_dir }}'

    - name: determine the package files location
      set_fact:
        origin_ci_vagrant_package_directory: '{{ origin_ci_vagrant_package_dir }}/{{ origin_ci_vagrant_os }}/{{ origin_ci_vagrant_target_stage }}'

    - name: ensure the package output directory exists
      file:
        path: '{{ origin_ci_vagrant_package_directory }}'
        state: directory

    - name: determine the location of the output box
      set_fact:
        origin_ci_vagrant_package_box: '{{ origin_ci_vagrant_package_directory }}/{{ origin_ci_vagrant_provider }}.box'

    - name: package the VM image
      include: './tasks/package-{{ origin_ci_vagrant_provider }}.yml'

    - name: generate a checksum for the packaged box
      stat:
        path: '{{ origin_ci_vagrant_package_box }}'
        get_checksum: yes
        checksum_algorithm: 'sha256'
      register: origin_ci_vagrant_package_probe

    - name: determine where the box reference should point in the metadata
      set_fact:
        origin_ci_vagrant_package_url: '{{ origin_ci_vagrant_package_box }}'
      when: origin_ci_vagrant_package_ref == 'local'

    - name: place the Vagrant box metadata file if we don't already have it
      get_url:
        url: 'https://mirror.openshift.com/pub/vagrant/boxes/openshift3/{{ origin_ci_vagrant_os }}/{{ origin_ci_vagrant_target_stage }}/metadata.json'
        dest: '{{ origin_ci_vagrant_package_directory }}/metadata.json'

    - name: update the Vagrant box metadata file
      update_vagrant_metadata:
        dest: '{{ origin_ci_vagrant_package_directory }}/metadata.json'
        version_increment: '{{ origin_ci_vagrant_package_bump_version }}'
        provider: '{{ origin_ci_vagrant_provider }}'
        checksum: '{{ origin_ci_vagrant_package_probe.stat.checksum }}'
        serve_local: '{{ origin_ci_vagrant_package_url | default(omit) }}'

    - name: re-start the VM
      command: '/usr/bin/vagrant up --no-provision'
      args:
        chdir: '{{ origin_ci_vagrant_home_dir }}'
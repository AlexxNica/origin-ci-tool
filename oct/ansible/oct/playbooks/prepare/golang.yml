---
- name: ensure the call to this playbook is well-formed
  hosts: 'localhost'
  connection: 'local'
  become: 'no'

  pre_tasks:
    - name: ensure all required variables are set
      fail:
        msg: 'This playbook requires {{ item }} to be set.'
      when: item not in hostvars[inventory_hostname]
      with_items:
        - origin_ci_hosts
        - origin_ci_connection
        - origin_ci_golang_package

- name: install Golang on a new host
  hosts: '{{ origin_ci_hosts }}'
  connection: '{{ origin_ci_connection }}'
  become: '{{ origin_ci_become | default(omit) }}'
  become_method: '{{ origin_ci_become_method | default(omit) }}'
  become_user: '{{ origin_ci_become_user | default(omit) }}'

  pre_tasks:
    - name: register origin_ci_isolated_package
      set_fact:
        origin_ci_isolated_package: '{{ origin_ci_golang_package }}'
    
    - name: register origin_ci_isolated_disabledrepos
      set_fact:
        origin_ci_isolated_disabledrepos: '{{ origin_ci_golang_disabledrepos }}'
      when: origin_ci_golang_disabledrepos is defined

    - name: register origin_ci_golang_enabledrepos
      set_fact:
        origin_ci_isolated_enabledrepos: '{{ origin_ci_golang_enabledrepos }}'
      when: origin_ci_golang_enabledrepos is defined
      
    - name: register origin_ci_isolated_tmp_repourls
      set_fact:
        origin_ci_isolated_tmp_repourls: '{{ origin_ci_golang_tmp_repourls }}'
      when: origin_ci_golang_tmp_repourls is defined

  roles:
    - role: isolated-install